# ------
# MODBUS
# ------
  
  modbus:
    - name: MarstekVenus
      type: tcp
      host: 192.168.0.5
      port: 502
      delay: 1
      message_wait_milliseconds: 35
      timeout: 5
  
      sensors:
        - name: "My Battery3 Battery Voltage"
          unique_id: my_battery3_battery_voltage
          address: 32100
          slave: 1
          scan_interval: 10
          input_type: holding
          data_type: uint16
          unit_of_measurement: V
          device_class: voltage
          state_class: measurement
          scale: 0.01
          offset: 0
          precision: 1
  
        - name: "My Battery3 Battery Current"
          unique_id: my_battery3_battery_current
          address: 32101
          slave: 1
          scan_interval: 10
          input_type: holding
          data_type: int16
          unit_of_measurement: A
          device_class: current
          state_class: measurement
          scale: 0.01
          offset: 0
          precision: 1
  
        - name: "My Battery3 Battery Power"
          unique_id: my_battery3_battery_power
          address: 32102
          slave: 1
          scan_interval: 10
          input_type: holding
          data_type: int32
          unit_of_measurement: W
          device_class: power
          state_class: measurement
          scale: 1
          offset: 0
          precision: 0
  
        - name: "My Battery3 Battery SOC"
          unique_id: my_battery3_battery_soc
          address: 32104
          slave: 1
          scan_interval: 30
          input_type: holding
          data_type: uint16
          unit_of_measurement: "%"
          state_class: measurement
          scale: 1
          offset: 0
          precision: 0
  
        #- name: "My Battery3 Battery Energy"
        #  unique_id: my_battery3_battery_energy
        #  address: 32105
        #  slave: 1
        #  scan_interval: 30
        #  input_type: holding
        #  data_type: uint16
        #  unit_of_measurement: kWh
        #  device_class: power
        #  state_class: measurement
        #  scale: 0.001
        #  offset: 0
        #  precision: 0
  
        - name: "My Battery3 AC Voltage"
          unique_id: my_battery3_ac_voltage
          address: 32200
          slave: 1
          scan_interval: 30
          input_type: holding
          data_type: uint16
          unit_of_measurement: V
          device_class: voltage
          state_class: measurement
          scale: 0.1
          offset: 0
          precision: 1
  
        - name: "My Battery3 AC Current"
          unique_id: my_battery3_ac_current
          address: 32201
          slave: 1
          scan_interval: 30
          input_type: holding
          data_type: int16
          unit_of_measurement: A
          device_class: current
          state_class: measurement
          scale: 0.01
          offset: 0
          precision: 1
  
        - name: "My Battery3 AC Power"
          unique_id: my_battery3_ac_power
          address: 32202
          slave: 1
          scan_interval: 10
          input_type: holding
          data_type: int32
          unit_of_measurement: W
          device_class: power
          state_class: measurement
          scale: 1
          offset: 0
          precision: 0
  
        #    - name: "My Battery3 AC Frequency"
        #      unique_id: my_battery3_ac_frequency
        #      address: 32204
        #      slave: 1
        #      scan_interval: 30
        #      input_type: holding
        #      data_type: uint16
        #      unit_of_measurement: Hz
        #      device_class: frequency
        #      state_class: measurement
        #      scale: 0.01
        #      offset: 0
        #      precision: 2
  
        - name: "My Battery3 AC Offgrid Voltage"
          unique_id: my_battery3_ac_offgrid_voltage
          address: 32300
          slave: 1
          scan_interval: 30
          input_type: holding
          data_type: uint16
          unit_of_measurement: V
          device_class: voltage
          state_class: measurement
          scale: 0.1
          offset: 0
          precision: 1
  
        - name: "My Battery3 AC Offgrid Current"
          unique_id: my_battery3_ac_offgrid_current
          address: 32301
          slave: 1
          scan_interval: 30
          input_type: holding
          data_type: int16
          unit_of_measurement: A
          device_class: current
          state_class: measurement
          scale: 0.01
          offset: 0
          precision: 1
  
        - name: "My Battery3 AC Offgrid Power"
          unique_id: my_battery3_ac_offgrid_power
          address: 32302
          slave: 1
          scan_interval: 10
          input_type: holding
          data_type: int32
          unit_of_measurement: W
          device_class: power
          state_class: measurement
          scale: 1
          offset: 0
          precision: 0
  
        #- name: "My Battery3 Total Charging Energy"
        #  unique_id: my_battery3_total_charging_energy
        #  address: 33000
        #  slave: 1
        #  scan_interval: 30
        #  input_type: holding
        #  data_type: uint32
        #  unit_of_measurement: kWh
        #  device_class: energy
        #  state_class: measurement
        #  scale: 0.01
        #  offset: 0
        #  precision: 1
  
        #- name: "My Battery3 Total Discharging Energy"
        #  unique_id: my_battery3_total_discharging_energy
        #  address: 33002
        #  slave: 1
        #  scan_interval: 30
        #  input_type: holding
        #  data_type: uint32
        #  unit_of_measurement: kWh
        #  device_class: energy
        #  state_class: measurement
        #  scale: 0.01
        #  offset: 0
        #  precision: 1
  
        #- name: "My Battery3 Daily Charging Energy"
        #  unique_id: my_battery3_daily_charging_energy
        #  address: 33004
        #  slave: 1
        #  scan_interval: 30
        #  input_type: holding
        #  data_type: uint32
        #  unit_of_measurement: kWh
        #  device_class: energy
        #  state_class: measurement
        #  scale: 0.01
        #  offset: 0
        #  precision: 1
  
        #- name: "My Battery3 Daily Discharging Energy"
        #  unique_id: my_battery3_daily_discharging_energy
        #  address: 33006
        #  slave: 1
        #  scan_interval: 30
        #  input_type: holding
        #  data_type: uint32
        #  unit_of_measurement: kWh
        #  device_class: energy
        #  state_class: measurement
        #  scale: 0.01
        #  offset: 0
        #  precision: 1
  
        #- name: "My Battery3 Monthly Charging Energy"
        #  unique_id: my_battery3_monthly_charging_energy
        #  address: 33008
        #  slave: 1
        #  scan_interval: 30
        #  input_type: holding
        #  data_type: uint32
        #  unit_of_measurement: kWh
        #  device_class: energy
        #  state_class: measurement
        #  scale: 0.01
        #  offset: 0
        #  precision: 1
  
        #- name: "My Battery3 Monthly Discharging Energy"
        #  unique_id: my_battery3_monthly_discharging_energy
        #  address: 33010
        #  slave: 1
        #  scan_interval: 30
        #  input_type: holding
        #  data_type: uint32
        #  unit_of_measurement: kWh
        #  device_class: energy
        #  state_class: measurement
        #  scale: 0.01
        #  offset: 0
        #  precision: 1
  
        - name: "My Battery3 Internal Temperature"
          unique_id: my_battery3_internal_temperature
          address: 35000
          slave: 1
          scan_interval: 30
          input_type: holding
          data_type: int16
          unit_of_measurement: °C
          device_class: temperature
          state_class: measurement
          scale: 0.1
          offset: 0
          precision: 1
  
        - name: "My Battery3 Internal MOS1 Temperature"
          unique_id: my_battery3_internal_mos1_temperature
          address: 35001
          slave: 1
          scan_interval: 30
          input_type: holding
          data_type: int16
          unit_of_measurement: °C
          device_class: temperature
          state_class: measurement
          scale: 0.1
          offset: 0
          precision: 1
  
        - name: "My Battery3 Internal MOS2 Temperature"
          unique_id: my_battery3_internal_mos2_temperature
          address: 35002
          slave: 1
          scan_interval: 30
          input_type: holding
          data_type: int16
          unit_of_measurement: °C
          device_class: temperature
          state_class: measurement
          scale: 0.1
          offset: 0
          precision: 1
  
        - name: "My Battery3 Max Cell Temperature"
          unique_id: my_battery3_max_cell_temperature
          address: 35010
          slave: 1
          scan_interval: 30
          input_type: holding
          data_type: int16
          unit_of_measurement: °C
          device_class: temperature
          state_class: measurement
          scale: 0.1
          offset: 0
          precision: 1
  
        - name: "My Battery3 Min Cell Temperature"
          unique_id: my_battery3_min_cell_temperature
          address: 35011
          slave: 1
          scan_interval: 30
          input_type: holding
          data_type: int16
          unit_of_measurement: °C
          device_class: temperature
          state_class: measurement
          scale: 0.1
          offset: 0
          precision: 1
  
        - name: "My Battery3 Inverter State"
          unique_id: my_battery3_inverter_state
          address: 35100
          slave: 1
          scan_interval: 5
          input_type: holding
          data_type: uint16
          unit_of_measurement: ""
          state_class: measurement
  
        #- name: "My Battery3 Battery Charge Voltage Limit"
        #  unique_id: my_battery3_battery_charge_voltage_limit
        #  address: 35110
        #  slave: 1
        #  scan_interval: 30
        #  input_type: holding
        #  data_type: uint16
        #  unit_of_measurement: V
        #  device_class: voltage
        #  state_class: measurement
        #  scale: 0.1
        #  offset: 0
        #  precision: 1
  
        #- name: "My Battery3 Battery Charge Current Limit"
        #  unique_id: my_battery3_battery_charge_current_limit
        #  address: 35111
        #  slave: 1
        #  scan_interval: 5
        #  input_type: holding
        #  data_type: uint16
        #  unit_of_measurement: A
        #  device_class: current
        #  state_class: measurement
        #  scale: 0.1
        #  offset: 0
        #  precision: 1
  
        #- name: "My Battery3 Battery Discharge Current Limit"
        #  unique_id: my_battery3_battery_discharge_current_limit
        #  address: 35112
        #  slave: 1
        #  scan_interval: 5
        #  input_type: holding
        #  data_type: uint16
        #  unit_of_measurement: A
        #  device_class: current
        #  state_class: measurement
        #  scale: 0.1
        #  offset: 0
        #  precision: 1
  
        - name: "My Battery3 RS485 Control Mode"
          unique_id: my_battery3_rs485_control_mode
          address: 42000
          slave: 1
          input_type: holding
          data_type: uint16
          unit_of_measurement: ""
          scale: 1
          offset: 0
          precision: 0
  
        - name: "My Battery3 Force Charge/Discharge Mode"
          unique_id: my_battery3_force_charge_discharge_mode
          address: 42010
          slave: 1
          input_type: holding
          data_type: uint16
          unit_of_measurement: ""
          scale: 1
          offset: 0
          precision: 0
  
        - name: "My Battery3 Charge to SOC"
          unique_id: my_battery3_charge_to_soc
          address: 42011
          slave: 1
          input_type: holding
          data_type: uint16
          unit_of_measurement: "%"
          scale: 1
          offset: 0
          precision: 0
  
        - name: "My Battery3 Forcible Charge Power"
          unique_id: my_battery3_forcible_charge_power
          address: 42020
          slave: 1
          input_type: holding
          data_type: uint16
          unit_of_measurement: W
          scale: 1
          offset: 0
          precision: 0
  
        - name: "My Battery3 Forcible Discharge Power"
          unique_id: my_battery3_forcible_discharge_power
          address: 42021
          slave: 1
          input_type: holding
          data_type: uint16
          unit_of_measurement: W
          scale: 1
          offset: 0
          precision: 0
  
        - name: "My Battery3 User Work Mode"
          unique_id: my_battery3_user_work_mode
          address: 43000
          slave: 1
          input_type: holding
          data_type: uint16
          unit_of_measurement: ""
          scale: 1
          offset: 0
          precision: 0

      # switches:
      #   - name: "My Battery3 Enable RS485 Control Mode"
      #     unique_id: my_battery3_enable_rs485_control_mode
      #     address: 42000
      #     slave: 1
      #     command_on: 21930 # 0x55AA in decimal
      #     command_off: 21947 # 0x55BB in decimal
      #     write_type: holding
  
      #   - name: "My Battery3 Force Charge Mode"
      #     unique_id: my_battery3_force_charge_mode
      #     address: 42010
      #     slave: 1
      #     command_on: 1 # Charge mode
      #     command_off: 0 # Stop mode
      #     write_type: holding
  
      #   - name: "My Battery3 Force Discharge Mode"
      #     unique_id: my_battery3_force_discharge_mode
      #     address: 42010
      #     slave: 1
      #     command_on: 2 # Discharge mode
      #     command_off: 0 # Stop mode
      #     write_type: holding
  
# ------------
# INPUT NUMBER
# ------------
  input_number:
    my_battery3_discharging_charging_power:
      name: "My Battery3 (dis)charging power"
      min: -2500
      max: 2500
      step: 50
      unit_of_measurement: W
      mode: slider
  
  # # charge power
  # action: modbus.write_register
  # data:
  #   hub: MarstekVenus
  #   address: 42020
  #   slave: 1
  #   value: 200
  
  # # discharge power
  # action: modbus.write_register
  # data:
  #   hub: MarstekVenus
  #   address: 42021
  #   slave: 1
  #   value: 200
  
  # # force discharge
  # action: modbus.write_register
  # data:
  #   hub: MarstekVenus
  #   address: 42010
  #   slave: 1
  #   value: 2
  
  # # force charge
  # action: modbus.write_register
  # data:
  #   hub: MarstekVenus
  #   address: 42010
  #   slave: 1
  #   value: 1
  
  # # stop forcible discharge
  # action: modbus.write_register
  # data:
  #   hub: MarstekVenus
  #   address: 42010
  #   slave: 1
  #   value: 0

# ------------
# INPUT SELECT
# ------------
  
  input_select:
    my_battery3_user_work_mode_input_select:
      name: My Battery3 User Work Mode
      options:
        - "Manual"
        - "Anti-Feed"
        - "Trade Mode"
      initial: "Manual"
  
# -------
# SCRIPTS
# -------
  script:
    my_battery3_set_forcible_charge:
      sequence:
        - choose:
            - conditions:
                - condition: numeric_state
                  entity_id: input_number.my_battery3_discharging_charging_power
                  above: -1
                  below: 1
              sequence:
                - action: modbus.write_register
                  data:
                    hub: MarstekVenus
                    address: 42010
                    slave: 1
                    value: 0
                - action: modbus.write_register
                  data:
                    hub: MarstekVenus
                    address: 42020
                    slave: 1
                    value: 0
                - action: modbus.write_register
                  data:
                    hub: MarstekVenus
                    address: 42021
                    slave: 1
                    value: 0
            - conditions:
                - condition: numeric_state
                  entity_id: input_number.my_battery3_discharging_charging_power
                  above: -2501
                  below: -10
              sequence:
                - action: modbus.write_register
                  data:
                    hub: MarstekVenus
                    address: 42021
                    slave: 1
                    value: "{{states('input_number.my_battery3_discharging_charging_power')|int|abs}}"
                - action: modbus.write_register
                  data:
                    hub: MarstekVenus
                    address: 42010
                    slave: 1
                    value: 2
            - conditions:
                - condition: numeric_state
                  entity_id: input_number.my_battery3_discharging_charging_power
                  above: 10
                  below: 2501
              sequence:
                - action: modbus.write_register
                  data:
                    hub: MarstekVenus
                    address: 42020
                    slave: 1
                    value: "{{states('input_number.my_battery3_discharging_charging_power')|int|abs}}"
                - action: modbus.write_register
                  data:
                    hub: MarstekVenus
                    address: 42010
                    slave: 1
                    value: 1
      alias: My Battery3 Set Forcible Charge
      description: ""
      icon: mdi:battery-charging-40
  
# -----------
# AUTOMATIONS
# -----------
  automation:
  - id: my_battery3_sync_modbus_and_input_select
    alias: "My Battery3 Sync Modbus and Input Select"
    description: "sync modbus sensor with input select "
    mode: single
    triggers:
      - trigger: state
        entity_id:
          - sensor.my_battery3_user_work_mode
        id: sensor_to_input_select
      - trigger: state
        entity_id:
          - input_select.my_battery3_user_work_mode_input_select
        id: input_select_to_sensor
    conditions: []
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - sensor_to_input_select
            sequence:
              - action: input_select.select_option
                metadata: {}
                data:
                  option: >
                    {% if states('sensor.my_battery3_user_work_mode') | int == 0 %}
                      Manual
                    {% elif states('sensor.my_battery3_user_work_mode') | int == 1 %}
                      Anti-Feed
                    {% elif states('sensor.my_battery3_user_work_mode') | int == 2 %}
                      Trade Mode
                    {% else %}
                      Manual
                    {% endif %}
                target:
                  entity_id: input_select.my_battery3_user_work_mode_input_select
          - conditions:
              - condition: trigger
                id:
                  - input_select_to_sensor
            sequence:
              - action: modbus.write_register
                metadata: {}
                data:
                  hub: MarstekVenus
                  address: 43000
                  slave: 1
                  value: >
                    {% if is_state('input_select.my_battery3_user_work_mode_input_select',
                    'Manual') %}
                      0
                    {% elif is_state('input_select.my_battery3_user_work_mode_input_select',
                    'Anti-Feed') %}
                      1
                    {% elif is_state('input_select.my_battery3_user_work_mode_input_select',
                    'Trade Mode') %}
                      2
                    {% else %}
                      0
                    {% endif %}
# ----------------
# TEMPLATE SENSORS
# ----------------
  
  template:
    - sensor:
        - name: "My Battery3 Charging in W"
          unique_id: my_battery3_charging_in_w
          unit_of_measurement: W
          device_class: power
          state_class: measurement
          state: >
            {% if states('sensor.my_battery3_ac_power') | float < 0 %}
              {{ (states('sensor.my_battery3_ac_power') | float) *-1 }}
            {% else %}
              0
            {% endif %}
          
        - name: "My Battery3 Discharging in W"
          unique_id: my_battery3_discharging_in_w
          unit_of_measurement: W
          device_class: power
          state_class: measurement
          state: >
            {% if states('sensor.my_battery3_ac_power') | float > 0 %}
              {{ (states('sensor.my_battery3_ac_power') | float) }}
            {% else %}
              0
            {% endif %}

  
        - name: "My Battery3 Force Charge/Discharge Mode Status"
          unique_id: my_battery3_force_charge_discharge_mode_status
          state: >
            {% set mode = states('sensor.my_battery3_force_charge_discharge_mode') | int %}
            {% if mode == 0 %}
              Stop
            {% elif mode == 1 %}
              Charge
            {% elif mode == 2 %}
              Discharge
            {% else %}
              Unknown
            {% endif %}
  
        - name: "My Battery3 RS485 Control Mode Status"
          unique_id: my_battery3_rs485_control_mode_status
          state: >
            {% set mode = states('sensor.my_battery3_rs485_control_mode') | int %}
            {% if mode == 21930 %}
              Enabled
            {% elif mode == 21947 %}
              Disabled
            {% else %}
              Unknown
            {% endif %}

#---------
# SWITCHES
#---------
  switch:
    - platform: template
      switches:
        my_battery3_rs485_control_mode_switch:
          friendly_name: "My Battery3 RS485 Control Mode Switch"
          unique_id: my_battery3_rs485_control_mode_switch
          value_template: >
            {% set mode = states('sensor.my_battery3_rs485_control_mode') | int %}
            {{ mode == 21930 }}  # True (ON) when Enabled (21930), False (OFF) otherwise
          turn_on:
            action: modbus.write_register
            data:
              hub: MarstekVenus
              unit: 1
              address: 42000
              value: 21930 # Write 0x55AA to enable RS485 control mode
          turn_off:
            action: modbus.write_register
            data:
              hub: MarstekVenus
              unit: 1
              address: 42000
              value: 21947 # Write 0x55BB to disable RS485 control mode
  
# -------
# SENSORS
# -------
  
  sensor:
    - platform: integration
      name: My Battery3 Discharging in kWh
      unique_id: my_battery3_discharging_in_kwh
      source: sensor.my_battery3_discharging_in_w
      round: 2
      unit_prefix: k
      unit_time: h
      method: left
    - platform: integration
      name: My Battery3 Charging in kWh
      unique_id: my_battery3_charging_in_kwh
      source: sensor.my_battery3_charging_in_w
      round: 2
      unit_prefix: k
      unit_time: h
      method: left

# --------------
# UTILITY METERS
# --------------

  utility_meter:
    daily_discharge:
      name: My Battery3 Daily Discharging in kWh
      unique_id: my_battery3_daily_discharging_in_kwh
      source: sensor.my_battery3_discharging_in_kwh
      cycle: daily


    daily_charge:
      name: My Battery3 Daily Charging in kWh
      unique_id: my_battery3_daily_charging_in_kwh
      source: sensor.my_battery3_charging_in_kwh
      cycle: daily
